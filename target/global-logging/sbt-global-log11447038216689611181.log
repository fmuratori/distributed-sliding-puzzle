[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Fabio\AppData\Local\Temp\idea2.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Fabio\AppData\Local\Temp\idea2.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.3 (Oracle Corporation Java 16.0.2)
[debug]       Load.loadUnit: plugins took 123.6933ms
[debug]       Load.loadUnit: defsScala took 0.397ms
[debug] [Loading] Scanning directory C:\Users\Fabio\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Fabio\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 34.4543 ms
[debug]           Load.resolveProject(global-plugins) took 77.1326ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Fabio\.sbt\1.0\plugins, plugins: List(<none>))) took 142.189ms
[debug] [Loading] Done in C:\Users\Fabio\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 174.2989ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2488ms
[debug]     Load.loadUnit(file:/C:/Users/Fabio/.sbt/1.0/plugins/, ...) took 311.6003ms
[debug]   Load.apply: load took 570.6298ms
[debug]   Load.apply: resolveProjects took 7.9346ms
[debug]   Load.apply: finalTransforms took 94.0562ms
[debug]   Load.apply: config.delegates took 11.0595ms
[debug]   Load.apply: Def.make(settings)... took 1193.6367ms
[debug]   Load.apply: structureIndex took 223.2828ms
[debug]   Load.apply: mkStreams took 2.8549ms
[info] loading global plugins from C:\Users\Fabio\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 5094.2675ms
[debug]           Load.loadUnit: plugins took 51.07ms
[debug]           Load.loadUnit: defsScala took 0.0055ms
[debug] [Loading] Scanning directory C:\Users\Fabio\Desktop\pcd_workspace\pcd-assignment-03\project
[debug]             Load.loadUnit: mkEval took 7.8098ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Fabio\Desktop\pcd_workspace\pcd-assignment-03\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.696 ms
[info] loading settings for project pcd-assignment-03-build from idea2.sbt ...
[debug]               Load.resolveProject(pcd-assignment-03-build) took 5.9085ms
[debug]             Load.loadTransitive: finalizeProject(Project(id pcd-assignment-03-build, base: C:\Users\Fabio\Desktop\pcd_workspace\pcd-assignment-03\project, plugins: List(<none>))) took 10.2432ms
[debug] [Loading] Done in C:\Users\Fabio\Desktop\pcd_workspace\pcd-assignment-03\project, returning: (pcd-assignment-03-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 223.3862ms
[debug]           Load.loadUnit: cleanEvalClasses took 13.1298ms
[debug]         Load.loadUnit(file:/C:/Users/Fabio/Desktop/pcd_workspace/pcd-assignment-03/project/, ...) took 289.1349ms
[debug]       Load.apply: load took 294.7331ms
[debug]       Load.apply: resolveProjects took 0.1851ms
[debug]       Load.apply: finalTransforms took 21.1776ms
[debug]       Load.apply: config.delegates took 0.7527ms
[debug]       Load.apply: Def.make(settings)... took 260.7805ms
[debug]       Load.apply: structureIndex took 68.2754ms
[debug]       Load.apply: mkStreams took 0.0043ms
[info] loading project definition from C:\Users\Fabio\Desktop\pcd_workspace\pcd-assignment-03\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1110.9361ms
[debug]     Load.loadUnit: defsScala took 0.0305ms
[debug] [Loading] Scanning directory C:\Users\Fabio\Desktop\pcd_workspace\pcd-assignment-03
[debug]       Load.loadUnit: mkEval took 0.3657ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Fabio\Desktop\pcd_workspace\pcd-assignment-03, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 6.7731 ms
[info] loading settings for project pcd-assignment-03 from build.sbt ...
[debug]         Load.resolveProject(pcd-assignment-03) took 47.6343ms
[debug]       Load.loadTransitive: finalizeProject(Project(id pcd-assignment-03, base: C:\Users\Fabio\Desktop\pcd_workspace\pcd-assignment-03, plugins: List(<none>))) took 55.8237ms
[debug] [Loading] Done in C:\Users\Fabio\Desktop\pcd_workspace\pcd-assignment-03, returning: (pcd-assignment-03)
[debug]     Load.loadUnit: loadedProjectsRaw took 3482.3161ms
[debug]     Load.loadUnit: cleanEvalClasses took 25.9943ms
[debug]   Load.loadUnit(file:/C:/Users/Fabio/Desktop/pcd_workspace/pcd-assignment-03/, ...) took 4621.0611ms
[debug] Load.apply: load took 4625.5564ms
[debug] Load.apply: resolveProjects took 0.1489ms
[debug] Load.apply: finalTransforms took 42.7623ms
[debug] Load.apply: config.delegates took 0.744ms
[debug] Load.apply: Def.make(settings)... took 108.4489ms
[debug] Load.apply: structureIndex took 30.8869ms
[debug] Load.apply: mkStreams took 0.0024ms
[info] set current project to pcd-assignment-03 (in build file:/C:/Users/Fabio/Desktop/pcd_workspace/pcd-assignment-03/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 49907 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 49907, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to pcd-assignment-03 (in build file:/C:/Users/Fabio/Desktop/pcd_workspace/pcd-assignment-03/)
[debug] > Exec(idea-shell, None, None)
